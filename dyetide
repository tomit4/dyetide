#!/usr/bin/env bash
# set -vx

printhelp() {
    cat <<EOM
usage: dyetide [-x|-r] file
options:
 -x             replace all hex with rgba in file
 -r             replace all rgb with hex in file
examples:
 dyetide -x file
 dyetide -r file
EOM
    exit 1
}

error() {
    printf "error: %s\n" "$1" 1>&2
    ${2:+exit $2}
}

success() {
    printf "success: %s\n" "$1"
    ${2:+exit 0}
}

# to be placed in install script
dependencycheck() {
    local dep missingdependencies=0
    for dep in "$@"; do
        if ! command -v "$dep" &>/dev/null; then
            error "dependency not met: $dep"
        fi
    done
    if [[ $missingdependencies -gt 0 ]]; then
        exit 1
    fi
}

replace_all_hex() {
    local filename
    filename="${2}"
    if [[ -f "$filename" ]]; then
        local rgb regex
        local allhexvalues hexvalues=()
        regex='#[0-9a-fA-F]{8}|#[0-9a-fA-F]{6}|#[0-9a-fA-F]{3}'
        # grabs all hex values in $filename and puts them in $allhexvalues
        mapfile -t allhexvalues < <(grep -P -o "${regex}" "${filename}")

        if [[ ${#allhexvalues[@]} -eq 0 ]]; then
            error "no hex values found in $filename" 2
        fi

        # $hexvalues contains only unique hex values from $allhexvalues
        while IFS= read -r -d '' x; do
            hexvalues+=("$x")
        done < <(printf "%s\0" "${allhexvalues[@]}" | sort -uz)

        for hex in "${hexvalues[@]}"; do
            # replace with repaint after installation script is done
            rgb=$(./dependencies/repaint -x "$hex")
            # sed looks for hex codes with one trailing space...
            sed -i "s/\s${hex}\s/ ${rgb} /g" "$filename"
            # or a preceding space and a trailing space...
            sed -i "s/${hex}\s/${rgb} /g" "$filename"
            # or a preceding space and a trailing semicolon (css files)
            sed -i "s/\s${hex};/ ${rgb};/g" "$filename"
        done

        success "${filename}'s hex codes converted to rgba" 0
    else
        error "$filename not found" 2
    fi
}

replace_all_rgb() {
    local filename
    filename="${2}"
    if [[ -f "$filename" ]]; then
        local regex
        # local allrgbvalues rgbvalues=()
        regex='rgb[a]?[(][0-9]{1,3}, [0-9]{1,3}, [0-9]{1,3}[)]|rgb[a]?[(][0-9]{1,3}, [0-9]{1,3}, [0-9]{1,3}, [0-1].[0-9][)]'

        grep -P -o "${regex}" "${filename}"

        # mapfile -t allrgbvalues < <( grep -P -o  "${regex}" "${filename}" )
    else
        error "$filename not found" 2
    fi
}

main() {
    [[ "$#" -lt 1 ]] && printhelp

    while getopts ":x:r:?" arg; do
        case $arg in
            x)
                replace_all_hex "$@"
                ;;
            r)
                replace_all_rgb "$@"
                ;;
            ?)
                printhelp
                ;;
        esac
    done
}

main "$@"
