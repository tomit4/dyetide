#!/usr/bin/env bash

error() {
    printf "error: %s\n" "$1" 1>&2
    ${2:+exit $2}
}

alpha_to_hex() {
    printf "%02x\n" "$(echo "scale=0; $1*255" | bc)" 2>/dev/null
}

hex_to_rgb() {
    local a
    : "${1/\#/}"
    if ((${#_} == 8)); then
        ((r = 16#${_:0:2}, g = 16#${_:2:2}, b = 16#${_:4:2}, a = 16#${_:6:2}))
        a=$(echo "scale=2; $a / 255" | bc)
    elif ((${#_} == 6)); then
        ((r = 16#${_:0:2}, g = 16#${_:2:2}, b = 16#${_:4:2}))
        a=1.0
    elif ((${#_} == 3)); then
        ((r = 16#${_:0:1}, g = 16#${_:1:1}, b = 16#${_:2:1}))
        a=1.0
    else
        error "$1 is not a recognized hex color code."
    fi
    printf "%s\n" "rgba($r, $g, $b, $a)"
}

rgb_to_hex() {
    local a

    if [[ -n "$4" ]]; then
        a=$(alpha_to_hex "$4")
        printf "#%02x%02x%02x%s\n" "$1" "$2" "$3" "$a"
    else
        printf "#%02x%02x%02x\n" "$1" "$2" "$3"
    fi
}

main() {
    if [[ "$#" -lt 1 ]]; then
        exit 2
    fi

    while getopts ":x:r:?" arg; do
        case $arg in
            x)
                if [[ "$#" -gt 2 ]]; then
                    error "-x only parses one following argument"
                    exit 2
                fi
                local rgbval
                rgbval=$(hex_to_rgb "${2:-''}")
                printf "%s\n" "$rgbval"
                ;;
            r)
                if [[ "$#" -gt 5 ]]; then
                    error "-r parses up to four following argument"
                    exit 2
                elif [[ "$#" -lt 4 ]]; then
                    error "-r parses no less than three arguments"
                    exit 2
                fi
                local hexval
                hexval=$(rgb_to_hex "${@:2}")
                printf "%s\n" "$hexval"
                ;;
            ?)
                exit 2
                ;;
        esac
    done
}

main "$@"
